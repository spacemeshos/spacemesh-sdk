name: Build and Release

on: push
#  release:
#    types: [created]

env:
  ARTIFACT_NAME: spacemesh-sdk

jobs:
  release:
    strategy:
      matrix:
        include:
          - image: macos-latest
            name: macos-amd64
            toolchain: x86_64-apple-darwin
          - image: ubuntu-latest
            name: linux-amd64
            toolchain: x86_64-unknown-linux-gnu
          - image: windows-latest
            name: windows-amd64
            toolchain: x86_64-pc-windows-gnu
          - image: [self-hosted, macos, arm64]
            name: macos-arm64
            toolchain: aarch64-apple-darwin
          - image: [self-hosted, linux, arm64]
            name: linux-arm64
            toolchain: aarch64-unknown-linux-gnu
    runs-on: ${{ matrix.image }}
    name: Release ${{ matrix.name }}
    steps:
      - name: Checkout
        uses: actions/checkout@v3
      - name: Set up toolchain
        uses: actions-rs/toolchain@v1
        with:
          toolchain: stable
          target: ${{ matrix.toolchain }}
      - name: Install required packages
        # libudev and pkgconfig are required for the hidapi crate
        if: matrix.name == 'linux-amd64'
        run: sudo apt-get install -y libudev-dev pkg-config
      - name: Regenerate C Header and Check
        run: make diff
      - name: Compile
        if: matrix.name != 'windows-amd64'
        run: cargo build --release
      - name: Compile Windows
        if: matrix.name == 'windows-amd64'
        # On Windows we only build using the GNU toolchain (not MSVC, the default)
        shell: bash
        run: |
          cargo build --release --target ${{ matrix.toolchain }}
          mv target/${{ matrix.toolchain }}/release/*.dll target/release
          mv target/${{ matrix.toolchain }}/release/*.a target/release
      - name: Prepare files
        shell: bash
        run: |
          mkdir artifacts
          # copy all relevant headers and static and dynamic libs into the new directory
          find . -maxdepth 3 -type f \( -path './LICENSE' -o -path '*.h' -o -path './target/release/*.a' -o -path './target/release/*.dll' -o -path './target/release/*.dylib' -o -path './target/release/*.so' \) -print0 | xargs -0 -I {} mv {} artifacts
          cd artifacts
          tar -czf ${{ env.ARTIFACT_NAME }}_${{ matrix.name }}.tar.gz *
          mv ${{ env.ARTIFACT_NAME }}_${{ matrix.name }}.tar.gz ..
      - name: Release
        uses: softprops/action-gh-release@v1
        with:
          files: ${{ env.ARTIFACT_NAME }}_${{ matrix.name }}.tar.gz
          tag_name: v0.0.1