/* Warning, this file is autogenerated by cbindgen. Don't modify this manually. */

#include <cstdarg>
#include <cstddef>
#include <cstdint>
#include <cstdlib>
#include <ostream>
#include <new>


static const uint8_t DEPRECATED_GET_APP_CONFIGURATION = 1;

static const uint8_t DEPRECATED_GET_PUBKEY = 2;

static const uint8_t DEPRECATED_SIGN_MESSAGE = 3;

static const uint8_t GET_APP_CONFIGURATION = 4;

static const uint8_t GET_PUBKEY = 5;

static const uint8_t SIGN_MESSAGE = 6;

static const uint8_t SIGN_OFFCHAIN_MESSAGE = 7;


extern "C" {

/// read_pubkey_from_ledger reads a pubkey from the ledger device specified by path and
/// derivation_path. If path is empty, the first ledger device found will be used. If confirm_key
/// is true, it will prompt the user to confirm the key on the device. It returns
/// a pointer to the pubkey bytes on success, or null on failure. Note that the caller must free
/// the returned pointer by passing it back to Rust using sdkutils.freeptr().
uint8_t *read_pubkey_from_ledger(const uint8_t *path,
                                 size_t pathlen,
                                 const uint8_t *derivation_path,
                                 size_t derivation_pathlen,
                                 bool confirm_key);

} // extern "C"
